# Generated by Django 3.1.2 on 2020-10-07 01:02

import markdownx.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Comment",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("original_commenter", models.JSONField()),
                ("comment", models.TextField()),
                ("was_submitted", models.BooleanField(default=False)),
                (
                    "client_mode",
                    models.CharField(
                        choices=[("T", "Testing"), ("L", "Live")],
                        default="T",
                        editable=False,
                        help_text="The mode the comment was submitted under.",
                        max_length=1,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Commenter",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("email", models.EmailField(max_length=254)),
                ("first_name", models.CharField(blank=True, max_length=100, null=True)),
                ("last_name", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("document_id", models.CharField(max_length=100, verbose_name="Document ID")),
                ("slug", models.SlugField()),
                ("title", models.CharField(max_length=500)),
                ("description", markdownx.models.MarkdownxField(blank=True, null=True)),
                ("is_accepting_comments", models.BooleanField(default=False)),
                ("is_withdrawn", models.BooleanField(default=False)),
                ("document_type", models.CharField(max_length=50)),
                ("comment_end_date", models.DateTimeField(blank=True, null=True)),
                ("comment_start_date", models.DateTimeField(blank=True, null=True)),
                (
                    "client_mode",
                    models.CharField(
                        choices=[("T", "Testing"), ("L", "Live")],
                        default="T",
                        help_text="Switch to live when you're ready to start accepting comments and have them submitted to regulations.gov. While in testing mode, comments will be logged but not submitted.",
                        max_length=1,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DocumentTopic",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("name", models.CharField(max_length=100)),
            ],
            options={"abstract": False},
        ),
    ]
